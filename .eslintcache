[{"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/Users.tsx":"1","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/UsersContainer.tsx":"2","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/users-reducer.ts":"3","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/index.tsx":"4","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/App.tsx":"5","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/profile-reducer.ts":"6","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/News/News.tsx":"7","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Header/Header.tsx":"8","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Music/Music.tsx":"9","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Dialogs.tsx":"10","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileInfo/ProfileInfo.tsx":"11","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPosts.tsx":"12","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Message/Message.tsx":"13","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/Post/Post.tsx":"14","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/redux-store.ts":"15","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileContainer.tsx":"16","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/Profile.tsx":"17","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPostsContainer.tsx":"18","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/auth-reducer.ts":"19","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Header/HeaderContainer.tsx":"20","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Navbar/Navbar.tsx":"21","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/DialogItem/DialogItem.tsx":"22"},{"size":2349,"mtime":1618779077302,"results":"23","hashOfConfig":"24"},{"size":4208,"mtime":1618820230593,"results":"25","hashOfConfig":"24"},{"size":3733,"mtime":1618344167454,"results":"26","hashOfConfig":"24"},{"size":880,"mtime":1616970175812,"results":"27","hashOfConfig":"24"},{"size":1322,"mtime":1619432158177,"results":"28","hashOfConfig":"24"},{"size":2748,"mtime":1618830107517,"results":"29","hashOfConfig":"24"},{"size":120,"mtime":1612474296601,"results":"30","hashOfConfig":"24"},{"size":696,"mtime":1619438133011,"results":"31","hashOfConfig":"24"},{"size":122,"mtime":1612474370538,"results":"32","hashOfConfig":"24"},{"size":1826,"mtime":1617007176264,"results":"33","hashOfConfig":"24"},{"size":1116,"mtime":1619430246728,"results":"34","hashOfConfig":"24"},{"size":1323,"mtime":1616966896541,"results":"35","hashOfConfig":"24"},{"size":286,"mtime":1612888660546,"results":"36","hashOfConfig":"24"},{"size":489,"mtime":1612734743136,"results":"37","hashOfConfig":"24"},{"size":585,"mtime":1618816629860,"results":"38","hashOfConfig":"24"},{"size":1834,"mtime":1618838599399,"results":"39","hashOfConfig":"24"},{"size":435,"mtime":1618830300912,"results":"40","hashOfConfig":"24"},{"size":2100,"mtime":1616966896533,"results":"41","hashOfConfig":"24"},{"size":928,"mtime":1619443204366,"results":"42","hashOfConfig":"24"},{"size":1487,"mtime":1619438930297,"results":"43","hashOfConfig":"24"},{"size":911,"mtime":1617018056881,"results":"44","hashOfConfig":"24"},{"size":415,"mtime":1612888372988,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"m2rw05",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/Users.tsx",[],["93","94"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/UsersContainer.tsx",["95"],"import {connect} from \"react-redux\";\nimport {AllAppStateType} from \"../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\nimport {\n    follow,\n    InitialStateType,\n    setCurrentPage,\n    setUsers, setUsersTotalCount, toggleIsFetching,\n    unfollow,\n    UserType\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\n\n\nexport type UsersAPIComponentPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    setUsers: (users: UserType[]) => void\n    setCurrentPage: (pageNumber: number) => void\n    setUsersTotalCount: (totalCount: number) => void\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    users: UserType[]\n    isFetching: boolean\n    toggleIsFetching: (isFetching: boolean) => void\n}\n\nexport class UsersAPIComponent extends React.Component<UsersAPIComponentPropsType> {\n\n    componentDidMount() {\n        this.props.toggleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n                this.props.setUsersTotalCount(response.data.totalCount)\n            })\n    }\n\n\n    getNewUserPage = (newPage: number) => {\n        this.props.toggleIsFetching(true)\n        this.props.setCurrentPage(newPage)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${newPage}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.toggleIsFetching(false)\n                this.props.setUsers(response.data.items)\n            })\n    }\n\n    render() {\n\n        return <>\n                {this.props.isFetching && <Preloader/>}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   getNewUserPage={this.getNewUserPage}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   users={this.props.users}\n            />\n\n        </>\n\n\n    }\n}\n\n\n\nexport type MapStatePropsType = {\n    usersPage: InitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    users: UserType[]\n    isFetching: boolean\n}\n\n// export type MapDispatchPropsType = {\n//     follow: (userId: number) => void\n//     unfollow: (userId: number) => void\n//     setUsers: (users: UserType[]) => void\n//     setCurrentPage: (currentPage: number) => void\n//     setUsersTotalCount: (totalCount: number) => void\n//     toggleIsFetching: (isFetching: boolean) => void\n// }\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        usersPage: state.usersPage,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        users: state.usersPage.users,\n        isFetching: state.usersPage.isFetching\n    }\n\n}\n// let mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n//     return {\n//         follow: (userId: number) => {\n//             dispatch(followAC(userId))\n//         },\n//         unfollow: (userId: number) => {\n//             dispatch(unfollowAC(userId))\n//         },\n//         setUsers: (users: UserType[]) => {\n//             dispatch(setUsersAC(users))\n//         },\n//         setCurrentPage: (pageNumber: number) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setUsersTotalCount: (totalCount: number) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching: boolean) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n\nexport const UsersContainer = connect(mapStateToProps,\n    {\n        follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        setUsersTotalCount,\n        toggleIsFetching\n    }\n\n    )(UsersAPIComponent);","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/users-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/index.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/App.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/profile-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/News/News.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Header/Header.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Music/Music.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Dialogs.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileInfo/ProfileInfo.tsx",["96"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPosts.tsx",["97","98"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Message/Message.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/Post/Post.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/redux-store.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileContainer.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/Profile.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPostsContainer.tsx",["99"],"import React from \"react\";\nimport {AddPostActionCreator, InitialStateType, UpdateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\n\n// type MyPostsPropsType = {\n//     // posts: Array<PostsType>\n//     // newPostText: string\n//     // dispatch: (newText: sting) => void\n//     store: ReduxStoreType\n// }\n\n\n// export function MyPostsContainer () {\n//\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//             (store) => {\n//                 let state = store.getState();\n//\n//                 let addPost = () => {\n//                     store.dispatch(AddPostActionCreator(state.profilePage.newPostText))\n//                 };\n//\n//\n//                 let onPostChange = (text: string) => {\n//                     store.dispatch(UpdateNewPostTextActionCreator(text))\n//                 }\n//                 return <MyPosts updateNewPostText={onPostChange}\n//                                 addPost={addPost}\n//                                 posts={store.getState().profilePage.posts}\n//                                 newPostText={store.getState().profilePage.newPostText}\n//                 />\n//             }\n//\n//         }\n//         </StoreContext.Consumer>\n//\n//     )\n// }\n\nexport type MapStatePropsType = {\n    profilePage: InitialStateType\n}\n\nexport type MapDispatchPropsType = {\n    addPost: () => void\n    updateNewPostText: (text: string) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        addPost: () => {\n            dispatch(AddPostActionCreator())\n        },\n        updateNewPostText: (text: string) => {\n            dispatch(UpdateNewPostTextActionCreator(text))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/auth-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Header/HeaderContainer.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Navbar/Navbar.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/DialogItem/DialogItem.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":9,"nodeType":"106","messageId":"107","endLine":3,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":23,"column":17,"nodeType":"110","endLine":23,"endColumn":56},{"ruleId":"104","severity":1,"message":"111","line":1,"column":29,"nodeType":"106","messageId":"107","endLine":1,"endColumn":37},{"ruleId":"104","severity":1,"message":"112","line":2,"column":27,"nodeType":"106","messageId":"107","endLine":2,"endColumn":36},{"ruleId":"104","severity":1,"message":"113","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'PostsType' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]
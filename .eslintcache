[{"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/Users.tsx":"1","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/UsersContainer.tsx":"2","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/users-reducer.ts":"3","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/index.tsx":"4","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/App.tsx":"5","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/profile-reducer.ts":"6","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/News/News.tsx":"7","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Header/Header.tsx":"8","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Music/Music.tsx":"9","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Dialogs.tsx":"10","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileInfo/ProfileInfo.tsx":"11","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPosts.tsx":"12","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Message/Message.tsx":"13","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/Post/Post.tsx":"14","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/redux-store.ts":"15","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileContainer.tsx":"16","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/Profile.tsx":"17","/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPostsContainer.tsx":"18"},{"size":2349,"mtime":1618779077302,"results":"19","hashOfConfig":"20"},{"size":4208,"mtime":1618820230593,"results":"21","hashOfConfig":"20"},{"size":3733,"mtime":1618344167454,"results":"22","hashOfConfig":"20"},{"size":880,"mtime":1616970175812,"results":"23","hashOfConfig":"20"},{"size":1341,"mtime":1618814729351,"results":"24","hashOfConfig":"20"},{"size":1987,"mtime":1618820424628,"results":"25","hashOfConfig":"20"},{"size":120,"mtime":1612474296601,"results":"26","hashOfConfig":"20"},{"size":342,"mtime":1612004336784,"results":"27","hashOfConfig":"20"},{"size":122,"mtime":1612474370538,"results":"28","hashOfConfig":"20"},{"size":1826,"mtime":1617007176264,"results":"29","hashOfConfig":"20"},{"size":801,"mtime":1618819937485,"results":"30","hashOfConfig":"20"},{"size":1323,"mtime":1616966896541,"results":"31","hashOfConfig":"20"},{"size":286,"mtime":1612888660546,"results":"32","hashOfConfig":"20"},{"size":489,"mtime":1612734743136,"results":"33","hashOfConfig":"20"},{"size":585,"mtime":1618816629860,"results":"34","hashOfConfig":"20"},{"size":1409,"mtime":1618820496124,"results":"35","hashOfConfig":"20"},{"size":460,"mtime":1618818062430,"results":"36","hashOfConfig":"20"},{"size":2100,"mtime":1616966896533,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m2rw05",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/Users.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Users/UsersContainer.tsx",["75"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/users-reducer.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/index.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/App.tsx",["76"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/profile-reducer.ts",["77"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/News/News.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Header/Header.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Music/Music.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Dialogs.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileInfo/ProfileInfo.tsx",["78"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPosts.tsx",["79","80"],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Dialogs/Message/Message.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/Post/Post.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/redux/redux-store.ts",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/ProfileContainer.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/Profile.tsx",[],"/Users/igorlitvintsev/frontend/it-incubator/projects/social-network2/src/Components/Profile/MyPosts/MyPostsContainer.tsx",["81"],"import React from \"react\";\nimport {AddPostActionCreator, InitialStateType, UpdateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {Dispatch} from \"redux\";\nimport {AllAppStateType} from \"../../../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\n\n// type MyPostsPropsType = {\n//     // posts: Array<PostsType>\n//     // newPostText: string\n//     // dispatch: (newText: sting) => void\n//     store: ReduxStoreType\n// }\n\n\n// export function MyPostsContainer () {\n//\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//             (store) => {\n//                 let state = store.getState();\n//\n//                 let addPost = () => {\n//                     store.dispatch(AddPostActionCreator(state.profilePage.newPostText))\n//                 };\n//\n//\n//                 let onPostChange = (text: string) => {\n//                     store.dispatch(UpdateNewPostTextActionCreator(text))\n//                 }\n//                 return <MyPosts updateNewPostText={onPostChange}\n//                                 addPost={addPost}\n//                                 posts={store.getState().profilePage.posts}\n//                                 newPostText={store.getState().profilePage.newPostText}\n//                 />\n//             }\n//\n//         }\n//         </StoreContext.Consumer>\n//\n//     )\n// }\n\nexport type MapStatePropsType = {\n    profilePage: InitialStateType\n}\n\nexport type MapDispatchPropsType = {\n    addPost: () => void\n    updateNewPostText: (text: string) => void\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\n    return {\n        addPost: () => {\n            dispatch(AddPostActionCreator())\n        },\n        updateNewPostText: (text: string) => {\n            dispatch(UpdateNewPostTextActionCreator(text))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",{"ruleId":"82","severity":1,"message":"83","line":3,"column":9,"nodeType":"84","messageId":"85","endLine":3,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":5,"column":9,"nodeType":"84","messageId":"85","endLine":5,"endColumn":16},{"ruleId":"82","severity":1,"message":"87","line":1,"column":9,"nodeType":"84","messageId":"85","endLine":1,"endColumn":20},{"ruleId":"88","severity":1,"message":"89","line":23,"column":17,"nodeType":"90","endLine":23,"endColumn":56},{"ruleId":"82","severity":1,"message":"91","line":1,"column":29,"nodeType":"84","messageId":"85","endLine":1,"endColumn":37},{"ruleId":"82","severity":1,"message":"92","line":2,"column":27,"nodeType":"84","messageId":"85","endLine":2,"endColumn":36},{"ruleId":"82","severity":1,"message":"93","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'Profile' is defined but never used.","'ProfileType' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'PostsType' is defined but never used.","'React' is defined but never used."]
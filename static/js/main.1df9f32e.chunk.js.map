{"version":3,"sources":["redux/dialogs-reducer.ts","api/api.ts","Components/Navbar/Navbar.module.css","reportWebVitals.ts","Components/Navbar/Navbar.tsx","Components/News/News.tsx","Components/Music/Music.tsx","utils/helpers/object-helpers.ts","redux/users-reducer.ts","Components/common/Paginator/Paginator.tsx","assets/images/UserAvatar.jpeg","Components/Users/User.tsx","Components/Users/Users.tsx","redux/users-selectors.ts","Components/Users/UsersContainer.tsx","Components/Header/Header.tsx","redux/auth-reducer.ts","Components/Header/HeaderContainer.tsx","Components/Login/Login.tsx","redux/app-reducer.ts","redux/redux-store.ts","hoc/WithSuspense.tsx","App.tsx","index.tsx","Components/common/FormsControls/FormsControls.tsx","assets/images/preloader.svg","Components/common/Preloader/Preloader.tsx","Components/common/FormsControls/FormsControls.module.css","Components/Users/Users.module.css","Components/common/Paginator/Paginator.module.css","utils/validators/validators.ts","Components/Header/Header.module.css","hoc/WithAuthRedirect.tsx","redux/profile-reducer.ts"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","Date","getTime","newMessageBody","AddMessageActionCreator","instance","axios","create","withCredentials","headers","baseURL","usersAPI","getUsers","currentPage","pageSize","get","unfollow","userID","delete","follow","post","authAPI","authMe","loginMe","email","password","rememberMe","logoutMe","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","active","News","Music","updateObjectInArray","items","itemId","itemPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_USERS_TOTAL_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","InitialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingInProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","Paginator","totalItemsCount","getNewUserPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","selectedPageStyle","style","selectedPage","page","onClick","filter","p","User","user","avatar","src","photos","small","UserAvatar","alt","followed","disabled","some","Users","createSelector","usersPage","getUsersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersAPIComponent","newPage","props","requestUsers","this","Preloader","React","Component","compose","withAuthRedirect","connect","response","totalCount","bind","Header","header","login","isAuth","logout","SET_USER_LOGIN_DATA","setAuthUserDataAC","payload","getAuthUserData","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","Input","required","commonError","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","InitializedSuccessTC","path","render","UsersContainer","component","AppContainer","promis","Promise","all","withRouter","SocialNetworkApp","ReactDOM","StrictMode","document","getElementById","FormsControl","meta","touched","children","hasError","formsControl","Textarea","input","restProps","placeholder","validate","text","preloader","value","maxLengthCreator","maxValue","length","mapStateToProps","ADD_POST","SET_USER_PROFILE","GET_STATUS","DELETE_POST","posts","likesCount","profile","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","large","postId","newPost","newPostBody","AddPostActionCreator","getStatusAC","getProfileTC","getStatusTC","updateStatusTC"],"mappings":"iNAAMA,EAAc,sBAehBC,EAAe,CACfC,QAAS,CACL,CAACC,GAAI,EAAGC,KAAM,4BACd,CAACD,GAAI,EAAGC,KAAM,4BACd,CAACD,GAAI,EAAGC,KAAM,4BACd,CAACD,GAAI,EAAGC,KAAM,4BACd,CAACD,GAAI,EAAGC,KAAM,6BAElBC,SAAU,CACN,CAACF,GAAI,EAAGG,QAAS,sFACjB,CAACH,GAAI,EAAGG,QAAS,mCACjB,CAACH,GAAI,EAAGG,QAAS,iGACjB,CAACH,GAAI,EAAGG,QAAS,yHACjB,CAACH,GAAI,EAAGG,QAAS,uFAIZC,EAAiB,WAA6F,IAA5FC,EAA2F,uDAAjEP,EAAcQ,EAAmD,uCACtH,OAAQA,EAAOC,MACX,KAAKV,EACD,IAAMW,EAA0B,CAC5BR,IAAI,IAAIS,MAAOC,UACfP,QAASG,EAAOK,gBAEpB,OAAO,2BACAN,GADP,IAEIH,SAAS,GAAD,mBAAMG,EAAMH,UAAZ,CAAsBM,MAEtC,QACI,OAAOH,IAONO,EAA0B,SAACD,GAAD,MAA8C,CACjFJ,KAAMV,EACNc,eAAgBA,K,uNCnDPE,E,OAAWC,EAAMC,OAAO,CACjCC,iBAAiB,EACjBC,QAAS,CAAC,UAAW,wCACrBC,QAAS,kDAGAC,EAAW,CACdC,SADc,SACJC,EAAqBC,GAAmB,OAAD,oHACtCT,EAASU,IAAT,qBAA2BF,EAA3B,kBAAgDC,IADV,sFAGjDE,SAJc,SAIJC,GAAiB,OAAD,oHACfZ,EAASa,OAAT,iBAA8CD,IAD/B,sFAG1BE,OAPc,SAONF,GAAiB,OAAD,oHACbZ,EAASe,KAAT,iBAA4CH,IAD/B,uFAKrBI,EAAU,CACbC,OADa,WACF,OAAD,oHACCjB,EAASU,IAAT,WADD,sFAGVQ,QAJa,SAIJC,EAAeC,GAAgD,IAAD,oIAA7BC,EAA6B,yCAC5DrB,EAASe,KAAT,aAA4B,CAACI,QAAOC,WAAUC,eADc,sFAGvEC,SAPa,WAOA,OAAD,oHACDtB,EAASa,OAAT,cADC,uFAKTU,EAAa,CAChBC,WADgB,SACLC,GAAiB,OAAD,oHAChBzB,EAASU,IAAT,kBAAwBe,IADR,sFAG3BC,UAJgB,SAIND,GAAiB,OAAD,oHACfzB,EAASU,IAAT,yBAA+Be,IADhB,sFAG1BE,aAPgB,SAOHC,GAAiB,OAAD,oHAClB5B,EAAS6B,IAAT,iBAA+B,CAACD,OAAQA,IADtB,wF,mBCtCvCE,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,oFCalEC,G,OAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,kECJP,SAASQ,IACZ,OACI,sBAAKC,UAAYC,IAAEC,IAAnB,UACI,qBAAKF,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,SAAUC,gBAAiBJ,IAAEK,OAA1C,qBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,WAAYC,gBAAiBJ,IAAEK,OAA5C,uBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,WAAYC,gBAAiBJ,IAAEK,OAA5C,wBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,QAASC,gBAAiBJ,IAAEK,OAAzC,oBAEJ,qBAAKN,UAAWC,IAAEE,KAAlB,SACI,cAAC,IAAD,CAASC,GAAI,SAAUC,gBAAiBJ,IAAEK,OAA1C,wB,YCnBT,SAASC,IACZ,OACI,uCCFD,SAASC,IACZ,OACI,wC,2DCFKC,EAAsB,SAACC,EAAmBC,EAAgBC,EAAsBC,GACzF,OAAOH,EAAMI,KAAI,SAAAC,GAEb,OAAIA,EAAEH,KAAkBD,EACb,2BAAII,GAAMF,GAEdE,MCHFC,EAAS,eACTC,EAAW,iBACXC,EAAY,kBACZC,EAAmB,yBACnBC,EAAwB,8BACxBC,EAAqB,2BACrBC,EAA+B,qCAExCC,EAAiC,CACjCC,MAAO,GACPzD,SAAU,EACV0D,gBAAiB,EACjB3D,YAAa,EACb4D,YAAY,EACZC,oBAAqB,IAiDZC,EAAgB,SAAC7C,GAAD,MAAqB,CAAC/B,KAAMgE,EAAQjC,WACpD8C,EAAkB,SAAC9C,GAAD,MAAqB,CAAC/B,KAAMiE,EAAUlC,WAExD+C,EAAiB,SAAChE,GAAD,MAA0B,CAACd,KAAMmE,EAAkBrD,gBAEpEiE,EAAmB,SAACL,GAAD,MAA0B,CAAC1E,KAAMqE,EAAoBK,eACxEM,EAA4B,SAACN,EAAqBxD,GAAtB,MAA0C,CAAClB,KAAMsE,EAA8BI,aAAYxD,WA4CvH+D,EAAkB,uCAAG,WAAOC,EAAoBnD,EAAgBoD,EAA2EC,GAAtH,SAAAC,EAAA,6DAE9BH,EAASF,GAA0B,EAAMjD,IAFX,SAGPoD,EAAUpD,GAHH,OAIG,IAJH,OAIjBuD,KAAKC,YACdL,EAASE,EAAcrD,IAE3BmD,EAASF,GAA0B,EAAOjD,IAPZ,2CAAH,4D,0BC3GlByD,EAAyC,SAAC,GAInD,IAJ6H,IAAzEC,EAAwE,EAAxEA,gBAAiB1E,EAAuD,EAAvDA,SAAS2E,EAA8C,EAA9CA,eAAgB5E,EAA8B,EAA9BA,YAAa6E,EAAiB,EAAjBA,YAEvGC,EAAaC,KAAKC,KAAKL,EAAkB1E,GACzCgF,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAGf,IAAME,EAAeL,KAAKC,KAAKF,EAAaD,GARgF,EASlFQ,mBAAS,GATyE,mBASrHC,EATqH,KAStGC,EATsG,KAUtHC,GAAyBF,EAAgB,GAAKT,EAAc,EAC5DY,EAAyBH,EAAgBT,EAEzCa,EAAiB,UAAMC,IAAMC,aAAZ,cAA8BD,IAAME,MAE3D,OACQ,gCACMP,EAAgB,GAClB,wBAAQQ,QAAS,WAAOP,EAAiBD,EAAgB,IAAzD,kBAICL,EACIc,QAAQ,SAACC,GAAD,OAAOA,GAAKR,GAAyBQ,GAAKP,KAClDzC,KAAI,SAAAgD,GAAC,OAAI,sBAAcF,QAAS,kBAAMlB,EAAeoB,IACpC9D,UAAWlC,IAAgBgG,EAAIN,EAAoBC,IAAME,KADjE,SACwEG,GAD7DA,MAIvBV,IAAkBF,GACpB,wBAAQU,QAAS,WAAOP,EAAiBD,EAAgB,IAAzD,sB,iBCxCD,MAA0B,wCCa5BW,EAAgC,SAAC,GAIO,IAJNpC,EAIK,EAJLA,oBACG1D,EAGE,EAHFA,SACAG,EAEE,EAFFA,OACA4F,EACE,EADFA,KAG9C,OACI,gCACI,qBAAKhE,UAAWyD,IAAMQ,OAAtB,SACI,cAAC,IAAD,CAAS7D,GAAI,YAAc4D,EAAKvH,GAAhC,SACI,qBAAKyH,IAA2B,OAAtBF,EAAKG,OAAOC,MAAiBJ,EAAKG,OAAOC,MAAQC,EAAYC,IAAI,eAGnF,8BACKN,EAAKO,SACA,wBAAQC,SAAU7C,EAAoB8C,MAAK,SAAAhI,GAAE,OAAIA,IAAOuH,EAAKvH,MACrDmH,QAAS,WACL3F,EAAS+F,EAAKvH,KAF1B,sBAKA,wBAAQ+H,SAAU7C,EAAoB8C,MAAK,SAAAhI,GAAE,OAAIA,IAAOuH,EAAKvH,MACrDmH,QAAS,WACLxF,EAAO4F,EAAKvH,KAFxB,sBAKV,8BACI,+BAAOuH,EAAKtH,SAEhB,8BACI,+BAAOsH,EAAK9E,WAEhB,8BACI,+BAAO,sBAEX,8BACI,+BAAO,6BChCVwF,EAAkC,SAAC,GASO,IARHjD,EAQE,EARFA,gBACA1D,EAOE,EAPFA,SACAD,EAME,EANFA,YACA4E,EAKE,EALFA,eACAlB,EAIE,EAJFA,MACAG,EAGE,EAHFA,oBACA1D,EAEE,EAFFA,SACAG,EACE,EADFA,OAGhD,OACI,gCACI,cAAC,EAAD,CAAWqE,gBAAiBhB,EAAiB1D,SAAUA,EAAUD,YAAaA,EACnE4E,eAAgBA,EAAgBC,YAAa,KACxD,8BACKnB,EAAMV,KAAI,SAAAC,GACP,OACI,cAAC,EAAD,CAAiBY,oBAAqBA,EAAqBvD,OAAQA,EAAQH,SAAUA,EAC/E+F,KAAMjD,GADDA,EAAEtE,a,kCC3BxBoB,GAAW8G,cAJC,SAAC7H,GACtB,OAAOA,EAAM8H,UAAUpD,SAG8B,SAACA,GACtD,OAAOA,EAAMqC,QAAQ,SAAA9C,GAAC,OAAK,QAIlB8D,GAAe,SAAC/H,GACzB,OAAOA,EAAM8H,WAGJE,GAAc,SAAChI,GACxB,OAAOA,EAAM8H,UAAU7G,UAGdgH,GAAqB,SAACjI,GAC/B,OAAOA,EAAM8H,UAAUnD,iBAGduD,GAAiB,SAAClI,GAC3B,OAAOA,EAAM8H,UAAU9G,aAGdmH,GAAgB,SAACnI,GAC1B,OAAOA,EAAM8H,UAAUlD,YAGdwD,GAAyB,SAACpI,GACnC,OAAOA,EAAM8H,UAAUjD,qBCUdwD,GAAb,4MAOIzC,eAAiB,SAAC0C,GAAqB,IAC5BrH,EAAY,EAAKsH,MAAjBtH,SACP,EAAKsH,MAAMC,aAAaF,EAASrH,IATzC,kEAEyB,IAAD,EACgBwH,KAAKF,MAA9BvH,EADS,EACTA,YAAaC,EADJ,EACIA,SACpBwH,KAAKF,MAAMC,aAAaxH,EAAaC,KAJ7C,+BAaQ,OAAO,qCACEwH,KAAKF,MAAM3D,YAAc,cAAC8D,EAAA,EAAD,IAC9B,cAAC,EAAD,CAAO/D,gBAAiB8D,KAAKF,MAAM5D,gBAC5B1D,SAAUwH,KAAKF,MAAMtH,SACrBD,YAAayH,KAAKF,MAAMvH,YACxB4E,eAAgB6C,KAAK7C,eACrBtE,OAAQmH,KAAKF,MAAMjH,OACnBH,SAAUsH,KAAKF,MAAMpH,SACrBuD,MAAO+D,KAAKF,MAAM7D,MAClBG,oBAAqB4D,KAAKF,MAAM1D,6BAtBnD,GAAuC8D,IAAMC,WAkD9BC,eACXC,IACAC,aAdkB,SAAC/I,GACnB,MAAO,CACH8H,UAAWC,GAAa/H,GACxBiB,SAAU+G,GAAYhI,GACtB2E,gBAAiBsD,GAAmBjI,GACpCgB,YAAakH,GAAelI,GAC5B0E,MAAO3D,GAASf,GAChB4E,WAAYuD,GAAcnI,GAC1B6E,oBAAqBuD,GAAuBpI,MAOxC,CACI8E,gBACAC,kBACAC,iBACAwD,aNSY,SAAC3B,EAAc5F,GAAf,8CAAoC,WAAOmE,GAAP,eAAAG,EAAA,6DAC5DH,EAASH,GAAiB,IADkC,SAErCnE,IAASC,SAAS8F,EAAM5F,GAFa,OAEtD+H,EAFsD,OAG5D5D,EAASJ,EAAe6B,IACxBzB,EAASH,GAAiB,IAC1BG,GA5CqBV,EA4CHsE,EAASxD,KAAK5B,MA5CY,CAAC1D,KAAMkE,EAAWM,WA6C9DU,GA3C+B6D,EA2CHD,EAASxD,KAAKyD,WA3Ca,CAAC/I,KAAMoE,EAAuB2E,gBAqCzB,iCArC9B,IAACA,EAFVvE,IAuCuC,OAApC,uDMRZpD,ON2BM,SAACW,GAAD,8CAAoB,WAAOmD,GAAP,SAAAG,EAAA,sEAChCJ,EAAmBC,EAAUnD,EAAQnB,IAASQ,OAAO4H,KAAKpI,KAAWgE,GADrC,2CAApB,uDM1BN3D,SN8BQ,SAACc,GAAD,8CAAoB,WAAOmD,GAAP,SAAAG,EAAA,sEAClCJ,EAAmBC,EAAUnD,EAAQnB,IAASK,SAAS+H,KAAKpI,KAAWiE,GADrC,2CAApB,yDMvCT8D,CAadR,I,oBChGM,SAASc,GAAOZ,GACnB,OACI,yBAAQrF,UAAWC,KAAEiG,OAArB,UACI,qBACIhC,IAAI,2GACJI,IAAI,SACR,qBAAKtE,UAAWC,KAAEkG,MAAlB,SACKd,EAAMe,OACD,oCAAOf,EAAMc,MAAb,MAAsB,wBAAQvC,QAASyB,EAAMgB,OAAvB,qBAAtB,QACA,cAAC,IAAD,CAASjG,GAAI,SAAb,wB,aCZhBkG,GAAsB,2BAEf/J,GAAe,CACxBE,GAAI,EACJgC,MAAO,GACP0H,MAAO,GACPC,QAAQ,GAoBCG,GAAoB,SAAC9J,EAAYgC,EAAe0H,EAAeC,GAA3C,MAAgE,CAC7FpJ,KAAMsJ,GACNE,QAAS,CAAC/J,KAAIgC,QAAO0H,QAAOC,YAKnBK,GAAkB,yDAAM,WAAOvE,GAAP,uBAAAG,EAAA,sEACV/D,IAAQC,SADE,OAEA,KAD3BuH,EAD2B,QAEpBxD,KAAKC,aAAmB,EACRuD,EAASxD,KAAKA,KAAlC7F,EAD2B,EAC3BA,GAAIgC,EADuB,EACvBA,MAAO0H,EADgB,EAChBA,MAChBjE,EAASqE,GAAkB9J,EAAIgC,EAAO0H,GAAO,KAJhB,2CAAN,uDCzBzBO,G,uKAEE,OAAO,cAACT,GAAD,eAAYV,KAAKF,Y,GAFFI,IAAMC,WAgBrBG,gBATS,SAAC/I,GACrB,MAAO,CACHL,GAAIK,EAAM6J,KAAKlK,GACfgC,MAAO3B,EAAM6J,KAAKlI,MAClB0H,MAAOrJ,EAAM6J,KAAKR,MAClBC,OAAQtJ,EAAM6J,KAAKP,UAIa,CAACK,mBAAiBJ,OD2BpC,yDAAM,WAAOnE,GAAP,SAAAG,EAAA,sEACD/D,IAAQM,WADP,OAES,IAFT,OAEX0D,KAAKC,YACdL,EAASqE,GAAkB,EAAG,GAAI,IAAI,IAHlB,2CAAN,wDC3BPV,CAAoDa,I,gDCE7DE,GAAiBC,aAA6B,CAACC,KAAM,SAApCD,EAhB2C,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9E,OACI,8BACI,uBAAMC,SAAUF,EAAhB,UACKG,aAAY,QAAS,QAASC,KAAO,CAACC,OACtCF,aAAY,WAAY,WAAYC,KAAO,CAACC,MAAW,YACvDF,aAAY,aAAc,KAAMC,KAAO,GAAI,WAAY,eACnDH,GAAU,qBAAKhH,UAAWyD,KAAM4D,YAAtB,SAAqCL,IACpD,8BACI,sDAuCLnB,gBAJS,SAAC/I,GAAD,MAAkD,CACtEsJ,OAAQtJ,EAAM6J,KAAKP,UAGiB,CAACD,MFjBpB,SAAC1H,EAAeC,EAAkBC,GAAlC,8CAAyH,WAAOuD,GAAP,iBAAAG,EAAA,sEACnH/D,IAAQE,QAAQC,EAAOC,EAAUC,GADkF,OAEzG,KAD3BmH,EADoI,QAE7HxD,KAAKC,WACdL,EAASuE,OAEL7J,EAAUkJ,EAASxD,KAAK3F,SAAS,GACrCuF,EAASoF,aAAW,QAAS,CAACC,OAAQ3K,MANgG,2CAAzH,wDEiBNiJ,EA1BD,SAACR,GAMX,OAAIA,EAAMe,OACC,cAAC,IAAD,CAAUhG,GAAI,aAIrB,gCACI,uCACA,cAACwG,GAAD,CAAgBK,SAXP,SAACO,GACdnC,EAAMc,MAAMqB,EAAS/I,MAAO+I,EAAS9I,SAAU8I,EAAS7I,qBCtC1D8I,GAAsB,0BAEflL,GAAe,CAC1BmL,aAAa,G,uCCGXC,GAAcC,YAAgB,CAC9BC,YAAaC,KACbC,YAAalL,KACb+H,UZSuB,WAAwF,IAAvF9H,EAAsF,uDAA5DyE,EAAcxE,EAA8C,uCAC9G,OAAQA,EAAOC,MACX,KAAKgE,EACD,OAAO,2BACAlE,GADP,IAEI0E,MAAOf,EAAoB3D,EAAM0E,MAAOzE,EAAOgC,OAAQ,KAAM,CAACwF,UAAU,MAEhF,KAAKtD,EACD,OAAO,2BACAnE,GADP,IAEI0E,MAAOf,EAAoB3D,EAAM0E,MAAOzE,EAAOgC,OAAQ,KAAM,CAACwF,UAAU,MAEhF,KAAKrD,EACD,OAAO,2BACApE,GADP,IAEI0E,MAAM,YAAKzE,EAAOyE,SAE1B,KAAKL,EACD,OAAO,2BACArE,GADP,IAEIgB,YAAaf,EAAOe,cAE5B,KAAKsD,EACD,OAAO,2BACAtE,GADP,IAEI2E,gBAAiB1E,EAAOgJ,aAEhC,KAAK1E,EACD,OAAO,2BACAvE,GADP,IAEI4E,WAAY3E,EAAO2E,aAE3B,KAAKJ,EACD,OAAO,2BACAxE,GADP,IAEI6E,oBAAqB5E,EAAO2E,WAAP,sBACX5E,EAAM6E,qBADK,CACgB5E,EAAOmB,SADvB,YAEXpB,EAAM6E,oBAAoBkC,QAAO,SAAApH,GAAE,OAAIA,IAAOM,EAAOmB,aAEvE,QACI,OAAOpB,IYhDf6J,KJEuB,WAA8F,IAA7F7J,EAA4F,uDAAlEP,GAAcQ,EAAoD,uCACpH,OAAQA,EAAOC,MACX,KAAKsJ,GACD,OAAO,2BACAxJ,GACAC,EAAOyJ,SAElB,QACI,OAAO1J,IITfkL,IDLsB,WAA6E,IAA5ElL,EAA2E,uDAAjDP,GAAcQ,EAAmC,uCAClG,OAAQA,EAAOC,MACX,KAAKyK,GACD,OAAO,2BACA3K,GADP,IAEI4K,aAAa,IAErB,QACI,OAAO5K,ICFfgK,KAAMmB,OAWJC,GAAmBC,OAAOC,sCAAwCzC,IAClE0C,GAAQC,YAAYX,GAAaO,GAAiBK,YAAgBC,QAWxEL,OAAOE,MAAQA,GAMAA,UC1CR,SAASI,GAAiB/C,GAE7B,OAAO,SAACL,GAEJ,OAAO,cAAC,WAAD,CAAUqD,SAAU,cAAClD,EAAA,EAAD,IAApB,SACH,cAACE,EAAD,eAAeL,OCS3B,IAAMsD,GAAmBlD,IAAMmD,MAAK,kBAAM,iCACpCC,GAAmBpD,IAAMmD,MAAK,kBAAM,iCAOpCE,G,kLAGEvD,KAAKF,MAAM0D,yB,+BAKX,OAAIxD,KAAKF,MAAMqC,YAEP,sBAAK1H,UAAW,cAAhB,UACI,cAAC,GAAD,IACA,cAACD,EAAD,IACA,sBAAKC,UAAW,sBAAhB,UACI,cAAC,IAAD,CAAOgJ,KAAM,SAAUC,OAAQ,kBAAM,cAAC,GAAD,OACrC,cAAC,IAAD,CAAOD,KAAM,oBAAqBC,OAAQR,GAAaI,MACvD,cAAC,IAAD,CAAOG,KAAM,WAAYC,OAAQR,GAAaE,MAC9C,cAAC,IAAD,CAAOK,KAAM,SAAUC,OAAQ,kBAAM,cAACC,GAAD,OACrC,cAAC,IAAD,CAAOF,KAAM,QAASG,UAAW,kBAAM,cAAC5I,EAAD,OACvC,cAAC,IAAD,CAAOyI,KAAM,SAAUG,UAAW,kBAAM,cAAC3I,EAAD,aAK7C,cAACgF,EAAA,EAAD,Q,GAxBDC,IAAMC,WAqClB0D,GAAgBzD,YAClBE,aALoB,SAAC/I,GAAD,MAAkD,CACtE4K,YAAa5K,EAAMkL,IAAIN,eAIE,CAACqB,qBHhCM,kBAChC,SAAC7G,GAED,IAAImH,EAASnH,EAASuE,MACtB6C,QAAQC,IAAI,CAACF,IACR5J,MAAM,WACHyC,EAb8B,CAAClF,KAAMyK,YGwC7C+B,IAFkB7D,CAGpBmD,IAUaW,GARU,WACrB,OAAO,cAAC,IAAD,UACH,cAAC,IAAD,CAAUpB,MAAOA,GAAjB,SACI,cAACe,GAAD,SChERM,IAAST,OACL,cAAC,IAAMU,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAOhCvK,K,gMCPawK,EAAgD,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAShD,EAAsB,EAAtBA,MAAQiD,EAAc,EAAdA,SAE/EC,EAAWF,GAAWhD,EAE1B,OACI,sBAAKhH,UAAWyD,IAAM0G,aAAe,KAAOD,EAAWzG,IAAMuD,MAAQ,IAArE,UACI,8BACKiD,IAEJC,GAAY,+BAAOlD,QAKnBoD,EAAwC,SAAC/E,GAAW,IACtDgF,EAA6BhF,EAA7BgF,MAAgBC,GAAajF,EAAtB0E,KAD8C,YACxB1E,EADwB,mBAE5D,OACI,cAACyE,EAAD,2BAAkBzE,GAAlB,aAA0B,oDAAcgF,GAAWC,QAI9CnD,EAAqC,SAAC9B,GAAW,IACnDgF,EAA6BhF,EAA7BgF,MAAgBC,GAAajF,EAAtB0E,KAD2C,YACrB1E,EADqB,mBAEzD,OACI,cAACyE,EAAD,2BAAkBzE,GAAlB,aAA0B,iDAAWgF,GAAWC,QAI3CpD,EAAc,SAACxK,EAAc6N,EAA4BpB,EAA6CqB,EAAsCxN,EAAeyN,GACpK,OACI,gCACI,cAAC,IAAD,CAAO/N,KAAMA,EAAM6N,YAAaA,EAAapB,UAAWA,EAAWqB,SAAUA,EAAUxN,KAAMA,IADjG,IAC0GyN,O,8FCzCnG,G,KAAA,IAA0B,uCCK5BjF,EAAY,WACrB,OACI,qBAAKtB,IAAKwG,EAAW1K,UAAWyD,IAAMiH,c,mBCN9CtL,EAAOC,QAAU,CAAC,aAAe,oCAAoC,MAAQ,6BAA6B,YAAc,qC,mBCAxHD,EAAOC,QAAU,CAAC,OAAS,sBAAsB,aAAe,4BAA4B,UAAY,2B,mBCAxGD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,KAAO,0B,gCCExE,oEAAO,IAAM+H,EAA8B,SAACuD,GACxC,IAAIA,EACJ,MAAO,4BAGEC,EAAmB,SAACC,GAAD,OAAyC,SAACF,GACtE,KAAIA,GAASA,EAAMG,OAASD,GAC5B,MAAM,cAAN,OAAqBA,EAArB,e,mBCTJzL,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,wB,mHCSpD0L,EAAkB,SAACjO,GACrB,MAAO,CACHsJ,OAAQtJ,EAAM6J,KAAKP,SAIpB,SAASR,EAAqBF,GAUjC,OADiCG,YAAQkF,EAARlF,EAPjC,SAA2BR,GAA6B,IAC/Ce,EAAwBf,EAAxBe,OAAWkE,EADmC,YACtBjF,EADsB,YAEnD,OAAKe,EACE,cAACV,EAAD,eAAe4E,IADF,cAAC,IAAD,CAAUlK,GAAI,gB,6PChBpC4K,EAAW,mBACXC,EAAmB,2BACnBC,EAAa,qBACbC,EAAc,sBAEhB5O,EAAe,CACf6O,MAAO,CACH,CAAC3O,GAAI,EAAGG,QAAS,sBAAuByO,WAAY,IACpD,CAAC5O,GAAI,EAAGG,QAAS,oBAAqByO,WAAY,IAEtDC,QAAS,CACLC,QAAS,GACTC,SAAU,CACNC,SAAU,GACVC,QAAS,GACTC,GAAI,GACJC,QAAS,GACTC,UAAW,GACXC,QAAS,GACTC,OAAQ,GACRC,SAAU,IAEdC,gBAAgB,EAChBC,0BAA2B,GAC3BC,SAAU,GACVpN,OAAQ,EACRoF,OAAQ,CACJC,MAAO,GACPgI,MAAO,KAGflN,OAAQ,IAGC4I,EAAiB,WAA4F,IAA3FhL,EAA0F,uDAAhEP,EAAcQ,EAAkD,uCACrH,OAAQA,EAAOC,MACX,KAAKmO,EACD,OAAO,2BAAIrO,GAAX,IAAkBsO,MAAOtO,EAAMsO,MAAMvH,QAAO,SAACC,GAAD,OAAOA,EAAErH,KAAOM,EAAOsP,YACvE,KAAKrB,EACD,IAAMsB,EAAqB,CACvB7P,IAAI,IAAIS,MAAOC,UACfP,QAASG,EAAOwP,YAChBlB,WAAY,GAEhB,OAAO,2BACAvO,GADP,IAEIsO,MAAM,GAAD,mBAAMtO,EAAMsO,OAAZ,CAAmBkB,MAEhC,KAAKrB,EACD,OAAO,2BACAnO,GADP,IAEIwO,QAASvO,EAAOuO,UAExB,KAAKJ,EACD,OAAO,2BACApO,GADP,IAEIoC,OAAQnC,EAAOmC,SAEvB,QACI,OAAOpC,IAMN0P,EAAuB,SAACD,GAAD,MAA0B,CAACvP,KAAMgO,EAAUuB,YAAaA,IAE/EE,EAAc,SAACvN,GAAD,MAAqB,CAAClC,KAAMkO,EAAYhM,WAgBtDwN,EAAe,SAAC3N,GAAD,8CAAoB,WAAOmD,GAAP,eAAAG,EAAA,sEACrBxD,IAAWC,WAAWC,GADD,OACtC+G,EADsC,OAE5C5D,GAnB2BoJ,EAmBHxF,EAASxD,KAnBoB,CAACtF,KAAMiO,EAAkBK,aAiBlC,iCAjBlB,IAACA,IAiBiB,OAApB,uDAKfqB,EAAc,SAAC5N,GAAD,8CAAoB,WAAOmD,GAAP,eAAAG,EAAA,sEACpBxD,IAAWG,UAAUD,GADD,OACrC+G,EADqC,OAE3C5D,EAASuK,EAAY3G,EAASxD,OAFa,2CAApB,uDAKdsK,EAAiB,SAAC1N,GAAD,8CAAoB,WAAOgD,GAAP,SAAAG,EAAA,sEACvBxD,IAAWI,aAAaC,GADD,OAEb,IAFa,OAEjCoD,KAAKC,YACdL,EAASuK,EAAYvN,IAHqB,2CAApB,yD","file":"static/js/main.1df9f32e.chunk.js","sourcesContent":["const ADD_MESSAGE = \"DIALOGS/ADD-MESSAGE\";\n\nexport type DialogsActionsTypes = ReturnType<typeof AddMessageActionCreator>\n\nexport type DialogsType = {\n    id: number\n    name: string\n}\nexport type MessageType = {\n    id: number\n    message: string\n}\n\nexport type InitialStateType = typeof initialState\n\nlet initialState = {\n    dialogs: [\n        {id: 1, name: \"Петя\"},\n        {id: 2, name: \"Ваня\"},\n        {id: 3, name: \"Маня\"},\n        {id: 4, name: \"Миша\"},\n        {id: 5, name: \"Коля\"},\n    ] as DialogsType[] ,\n    messages: [\n        {id: 1, message: \"Привет, как дела?\"},\n        {id: 2, message: \"Хехей!\"},\n        {id: 3, message: \"Как твой прогресс?\"},\n        {id: 4, message: \"Какую музыку случаешь?\"},\n        {id: 5, message: \"Как твоя собака?\"},\n    ] as MessageType[],\n}\n\nexport const dialogsReducer = (state: InitialStateType = initialState, action: DialogsActionsTypes): InitialStateType  => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            const newMessage: MessageType = {\n                id: new Date().getTime(),\n                message: action.newMessageBody\n            }\n            return {\n                ...state,\n                messages: [...state.messages, newMessage],\n            }\n        default:\n            return state\n    }\n}\ntype AddMessageType = {\n    type: typeof ADD_MESSAGE\n    newMessageBody: string\n}\nexport const AddMessageActionCreator = (newMessageBody: string) : AddMessageType => ({\n    type: ADD_MESSAGE,\n    newMessageBody: newMessageBody\n}) as const\n\n","import axios from \"axios\";\n\nexport const instance = axios.create({\n    withCredentials: true,\n    headers: {\"API-KEY\": \"792fb186-796b-4fb1-b58b-aab163ce4b24\"},\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\n})\n\nexport const usersAPI = {\n    async getUsers (currentPage: number, pageSize: number) {\n        return await instance.get(`users?page=${currentPage}&count=${pageSize}`)\n    },\n    async unfollow (userID: number) {\n        return await instance.delete<CommonResponseType>(`follow/${userID}`)\n    },\n    async follow (userID: number) {\n        return await instance.post<CommonResponseType>(`follow/${userID}`)\n    }\n}\n\nexport const authAPI = {\n    async authMe () {\n        return await instance.get(`auth/me`)\n    },\n    async loginMe (email: string, password: string, rememberMe: boolean = false) {\n        return await instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    async logoutMe () {\n        return await instance.delete(`auth/login`)\n    },\n}\n\nexport const profileAPI = {\n    async getProfile(userId: string) {\n        return await instance.get(`profile/${userId}`)\n    },\n    async getStatus(userId: string) {\n        return await instance.get(`profile/status/${userId}`)\n    },\n    async updateStatus(status: string) {\n        return await instance.put(`profile/status`, {status: status})\n    }\n}\n\nexport type CommonResponseType<T = {}> = {\n    data: T\n    messages: string[]\n    fieldsErrors: string[]\n    resultCode: number\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1dWpI\",\"item\":\"Navbar_item__3UZIM\",\"active\":\"Navbar_active__3b0QJ\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Navbar.module.css\";\n\n\nexport function Navbar () {\n    return (\n        <nav className={ s.nav }>\n            <div className={s.item }>\n                <NavLink to={\"/users\"} activeClassName={s.active} >Users</NavLink>\n            </div>\n            <div className={s.item }>\n                <NavLink to={\"/profile\"} activeClassName={s.active} >Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink>\n            </div>\n            <div className={s.item }>\n                <NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink>\n            </div>\n            <div className={s.item }>\n                <NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink>\n            </div>\n        </nav>\n    )\n};","import React from \"react\";\n\nexport function News () {\n    return (\n        <div>\n            News\n        </div>\n    )\n}","import React from \"react\";\n\nexport function Music () {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}","import {UserType} from \"../../redux/users-reducer\";\n\nexport const updateObjectInArray = (items: UserType[], itemId: number, itemPropName: string, newObjProps: { followed: true | false } ) => {\n    return items.map(u => {\n        // @ts-ignore\n        if (u[itemPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u\n    })\n}","import {CommonResponseType, usersAPI} from \"../api/api\";\nimport {Dispatch} from \"redux\";\nimport {AxiosResponse} from \"axios\";\nimport {updateObjectInArray} from \"../utils/helpers/object-helpers\";\n\nexport const FOLLOW = \"USERS/FOLLOW\"\nexport const UNFOLLOW = \"USERS/UNFOLLOW\"\nexport const SET_USERS = \"USERS/SET_USERS\"\nexport const SET_CURRENT_PAGE = \"USERS/SET_CURRENT_PAGE\"\nexport const SET_USERS_TOTAL_COUNT = \"USERS/SET_USERS_TOTAL_COUNT\"\nexport const TOGGLE_IS_FETCHING = \"USERS/TOGGLE_IS_FETCHING\"\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = \"USERS/TOGGLE_IS_FOLLOWING_PROGRESS\"\n\nlet InitialState: InitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nexport const UserReducer = (state: InitialStateType = InitialState, action: UsersActionType): InitialStateType => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.users]\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        case SET_USERS_TOTAL_COUNT:\n            return {\n                ...state,\n                totalUsersCount: action.totalCount\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userID]\n                    : [...state.followingInProgress.filter(id => id !== action.userID)]\n            }\n        default:\n            return state\n    }\n}\n\n\n// ACTIONS\nexport const followSuccess = (userId: number) => ({type: FOLLOW, userId} as const)\nexport const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId} as const)\nexport const setUsers = (users: UserType[]) => ({type: SET_USERS, users} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\nexport const setUsersTotalCount = (totalCount: number) => ({type: SET_USERS_TOTAL_COUNT, totalCount} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\nexport const toggleFollowingInProgress = (isFetching: boolean, userID: number) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userID} as const)\n\n// TYPES\nexport type UsersActionType = ReturnType<typeof followSuccess>\n    | ReturnType<typeof unfollowSuccess>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setUsersTotalCount>\n    | ReturnType<typeof toggleIsFetching>\n    | ReturnType<typeof toggleFollowingInProgress>\n\nexport type InitialStateType = {\n    users: UserType[]\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\n\nexport type UserAvatarType = {\n    small: string\n    large: string\n}\n\nexport type UserType = {\n    id: number\n    photos: UserAvatarType\n    followed: boolean,\n    name: string\n    status: string\n}\n\n\n// THUNKS\nexport const requestUsers = (page: number, pageSize: number) => async (dispatch: Dispatch) => {\n    dispatch(toggleIsFetching(true))\n    const response = await usersAPI.getUsers(page, pageSize)\n    dispatch(setCurrentPage(page))\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(response.data.items))\n    dispatch(setUsersTotalCount(response.data.totalCount))\n}\n\nexport const followUnfollowFlow = async (dispatch: Dispatch, userId: number, apiMethod: (userID: number) => Promise<AxiosResponse<CommonResponseType>>, actionCreator: (userId: number) => {type: \"USERS/FOLLOW\" | \"USERS/UNFOLLOW\", userId: number}) => {\n    debugger\n    dispatch(toggleFollowingInProgress(true, userId))\n    const response = await apiMethod(userId)\n    if (response.data.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingInProgress(false, userId))\n}\n\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n}\n\nexport const unfollow = (userId: number) => async (dispatch: Dispatch) => {\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n}","import style from \"./Paginator.module.css\";\nimport React, {useState} from \"react\";\n\nexport type PaginatorPropsType = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    getNewUserPage: (p: number) => void\n    portionSize: number\n}\n\nexport const Paginator:React.FC<PaginatorPropsType> = ({totalItemsCount, pageSize,getNewUserPage, currentPage, portionSize}) => {\n    debugger\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(pagesCount / portionSize)\n    const [portionNumber, setPortionNumber] = useState(1)\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    const rightPortionPageNumber = portionNumber * portionSize\n\n    const selectedPageStyle = `${style.selectedPage} + ${style.page}`\n\n    return (\n            <div>\n                { portionNumber > 1 &&\n                <button onClick={() => {setPortionNumber(portionNumber - 1) }} >PREV</button>\n                }\n\n\n                {pages\n                    .filter( (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber )\n                    .map(p => <span key={p} onClick={() => getNewUserPage(p)}\n                                      className={currentPage === p ? selectedPageStyle : style.page}>{p}</span>)}\n\n\n                { portionNumber !== portionCount &&\n                <button onClick={() => {setPortionNumber(portionNumber + 1) }} >NEXT</button>\n                }\n            </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/UserAvatar.475d2a0a.jpeg\";","import style from \"./Users.module.css\";\nimport UserAvatar from \"../../assets/images/UserAvatar.jpeg\";\nimport React from \"react\";\nimport {UserType} from \"../../redux/users-reducer\";\nimport {NavLink} from \"react-router-dom\";\n\nexport type UserPropsType = {\n    followingInProgress: number []\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    user: UserType\n}\n\nexport const User: React.FC<UserPropsType> = ({followingInProgress,\n                                                  unfollow,\n                                                  follow,\n                                                  user\n                                              }) => {\n\n    return (\n        <div>\n            <div className={style.avatar}>\n                <NavLink to={\"/profile/\" + user.id}>\n                    <img src={user.photos.small !== null ? user.photos.small : UserAvatar} alt=\"avatar\"/>\n                </NavLink>\n            </div>\n            <div>\n                {user.followed\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\n                              onClick={() => {\n                                  unfollow(user.id)\n                              }\n                              }>UNFOLLOW</button>\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\n                              onClick={() => {\n                                  follow(user.id)\n                              }}>FOLLOW</button>}\n            </div>\n            <div>\n                <span>{user.name}</span>\n            </div>\n            <div>\n                <span>{user.status}</span>\n            </div>\n            <div>\n                <span>{\"u.location.city\"}</span>\n            </div>\n            <div>\n                <span>{\"u.location.country\"}</span>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {UserType} from \"../../redux/users-reducer\";\nimport {Paginator} from \"../common/Paginator/Paginator\";\nimport {User} from \"./User\";\n\nexport type UsersPropsType = {\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    getNewUserPage: (p: number) => void\n    users: UserType[]\n    followingInProgress: number []\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\nexport const Users: React.FC<UsersPropsType> = ({\n                                                    totalUsersCount,\n                                                    pageSize,\n                                                    currentPage,\n                                                    getNewUserPage,\n                                                    users,\n                                                    followingInProgress,\n                                                    unfollow,\n                                                    follow,\n                                                }) => {\n\n    return (\n        <div>\n            <Paginator totalItemsCount={totalUsersCount} pageSize={pageSize} currentPage={currentPage}\n                       getNewUserPage={getNewUserPage} portionSize={10}/>\n            <div>\n                {users.map(u => {\n                    return (\n                        <User key={u.id} followingInProgress={followingInProgress} follow={follow} unfollow={unfollow}\n                              user={u}/>\n                    )\n                })\n                }\n            </div>\n        </div>\n    )\n}","import {AllAppStateType} from \"./redux-store\";\nimport {createSelector} from \"reselect\";\n\nconst getUsersSelector = (state: AllAppStateType) => {\n    return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter( u  => true);\n})\n\n\nexport const getUsersPage = (state: AllAppStateType) => {\n    return state.usersPage\n}\n\nexport const getPageSize = (state: AllAppStateType) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: AllAppStateType) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: AllAppStateType) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state: AllAppStateType) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state: AllAppStateType) => {\n    return state.usersPage.followingInProgress\n}","import {connect} from \"react-redux\";\nimport {AllAppStateType} from \"../../redux/redux-store\";\n\nimport {\n    follow,\n    followSuccess, requestUsers,\n    InitialStateType,\n    setCurrentPage,\n    unfollow,\n    unfollowSuccess,\n    UserType\n} from \"../../redux/users-reducer\";\nimport React from \"react\";\nimport {Users} from \"./Users\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage, getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n    getUsersPage\n} from \"../../redux/users-selectors\";\n\n\n\n\nexport type UsersAPIComponentPropsType = {\n    unfollowSuccess: (userId: number) => void\n    setCurrentPage: (pageNumber: number) => void\n    totalUsersCount: number\n    pageSize: number\n    currentPage: number\n    users: UserType[]\n    isFetching: boolean\n    followingInProgress: number[]\n    requestUsers: (currentPage: number, pageSize: number) => void\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\nexport class UsersAPIComponent extends React.Component<UsersAPIComponentPropsType> {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props\n        this.props.requestUsers(currentPage, pageSize);\n    }\n\n    getNewUserPage = (newPage: number) => {\n        const {pageSize} = this.props\n        this.props.requestUsers(newPage, pageSize);\n    }\n\n    render() {\n        return <>\n                {this.props.isFetching && <Preloader/>}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   getNewUserPage={this.getNewUserPage}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   users={this.props.users}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nexport type MapStatePropsType = {\n    usersPage: InitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    users: UserType[]\n    isFetching: boolean\n    followingInProgress: number[]\n}\n\nlet mapStateToProps = (state: AllAppStateType): MapStatePropsType => {\n    return {\n        usersPage: getUsersPage(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        users: getUsers(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose<React.ComponentType> (\n    withAuthRedirect,\n    connect(mapStateToProps,\n            {\n                followSuccess,\n                unfollowSuccess,\n                setCurrentPage,\n                requestUsers,\n                follow,\n                unfollow\n            }\n\n    ))\n(UsersAPIComponent);","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Header.module.css\";\n\nexport type HeaderPropsType = {\n    isAuth: boolean\n    login: string\n    logout: () => void\n}\n\nexport function Header(props: HeaderPropsType) {\n    return (\n        <header className={s.header}>\n            <img\n                src=\"https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=399&h=399\"\n                alt=\"logo\"/>\n            <div className={s.login}>\n                {props.isAuth\n                    ? <div> {props.login} - <button onClick={props.logout} >Log out</button>  </div>\n                    : <NavLink to={\"/login\"}>Login</NavLink>}\n            </div>\n        </header>\n    )\n}","import {Dispatch} from \"redux\";\nimport {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {AllAppActionType, AllAppStateType} from \"./redux-store\";\nimport {ThunkAction} from \"redux-thunk\";\n\n\nconst SET_USER_LOGIN_DATA = \"AUTH/SET_USER_LOGIN_DATA\";\n\nexport const initialState = {\n    id: 1,\n    email: \"\",\n    login: \"\",\n    isAuth: false\n}\n\nexport const authReducer = (state: InitialStateType = initialState, action: SetAuthUserDataACType): InitialStateType => {\n    switch (action.type) {\n        case SET_USER_LOGIN_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state\n    }\n}\n\n// TYPES\nexport type InitialStateType = typeof initialState\nexport type SetAuthUserDataACType = ReturnType<typeof setAuthUserDataAC>\n\n// ACTION\nexport const setAuthUserDataAC = (id: number, email: string, login: string, isAuth: boolean) => ({\n    type: SET_USER_LOGIN_DATA,\n    payload: {id, email, login, isAuth}\n} as const)\n\n\n// THUNKS\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\n    const response = await authAPI.authMe()\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data\n        dispatch(setAuthUserDataAC(id, email, login, true))\n    }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkAction<void, AllAppStateType, unknown, AllAppActionType> => async (dispatch) => {\n    const response = await authAPI.loginMe(email, password, rememberMe)\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages[0]\n        dispatch(stopSubmit(\"login\", {_error: message}))\n    }\n}\n\nexport const logout = () => async (dispatch: Dispatch<SetAuthUserDataACType>) => {\n    const response = await authAPI.logoutMe()\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserDataAC(1, \"\", \"\", false))\n    }\n}","import React from \"react\";\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {AllAppStateType} from \"../../redux/redux-store\";\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\n\nexport type HeaderContainerPropsType = {\n    id: number\n    email: string\n    login: string\n    isAuth: boolean\n    getAuthUserData: () => void\n    logout: () => void\n}\n\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\n\nconst mapStateToProps = (state: AllAppStateType) => {\n    return {\n        id: state.auth.id,\n        email: state.auth.email,\n        login: state.auth.login,\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport default connect(mapStateToProps, {getAuthUserData, logout})(HeaderContainer);","import React from \"react\";\nimport {InjectedFormProps, reduxForm, Field} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport {AllAppStateType} from \"../../redux/redux-store\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\n\ntype LoginFormDataType = {\n    email: string\n    password: string\n    rememberMe: boolean\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormDataType>> = ({handleSubmit, error}) => {\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                {createField(\"email\", \"Email\", Input, [required])}\n                {createField(\"password\", \"Password\", Input, [required], \"password\")}\n                {createField(\"rememberMe\", null, Input, [], \"checkbox\", \"remember me\")}\n                    {error &&  <div className={style.commonError} >{error}</div>}\n                <div>\n                    <button>Submit</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormDataType>({form: 'login'})(LoginForm)\ntype LoginType = {\n    login: (email: string, password: string, rememberMe: boolean) => void\n    isAuth: boolean\n}\n\nconst Login = (props: LoginType) => {\n\n    const onSubmit = (formData: LoginFormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AllAppStateType): mapStateToPropsType => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {AllAppActionType, AllAppStateType} from \"./redux-store\";\n\nconst INITIALIZED_SUCCESS = \"APP/SET_USER_LOGIN_DATA\";\n\nexport const initialState = {\n  initialized: false\n}\n\nexport const AppReducer = (state: InitialStateType = initialState, action: InitializedSuccessType) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state\n    }\n}\n\n\n// ACTION\nexport const InitializedSuccessAC = ()=> ({type: INITIALIZED_SUCCESS} as const)\n\n// TYPES\nexport type InitializedSuccessType = ReturnType<typeof InitializedSuccessAC>\nexport type InitialStateType = typeof initialState\n\n// THUNK\nexport const InitializedSuccessTC = (): ThunkAction<void, AllAppStateType, unknown, AllAppActionType> =>\n    (dispatch) => {\n\n    let promis = dispatch(getAuthUserData())\n    Promise.all([promis])\n        .then( () => {\n            dispatch(InitializedSuccessAC())\n        } )\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport {ProfileActionsTypes, profileReducer} from \"./profile-reducer\";\nimport {DialogsActionsTypes, dialogsReducer} from \"./dialogs-reducer\";\nimport {UserReducer} from \"./users-reducer\";\nimport {authReducer, SetAuthUserDataACType} from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form';\nimport {AppReducer, InitializedSuccessType} from \"./app-reducer\";\n\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: UserReducer,\n    auth: authReducer,\n    app: AppReducer,\n    form: formReducer\n})\n\nexport type AllAppStateType = ReturnType<typeof rootReducer>\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n    }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport type AllAppActionType = ProfileActionsTypes\n    | InitializedSuccessType\n    | SetAuthUserDataACType\n    | DialogsActionsTypes\n\n\n// @ts-ignore\nwindow.store = store;\n\nexport type ReduxStoreType = typeof store\nexport type AppDispatch = typeof store.dispatch\n\n\nexport default store;\n","import React, {ComponentType, Suspense} from \"react\";\nimport {Preloader} from \"../Components/common/Preloader/Preloader\";\n\nexport function withSuspense <T>(Component: ComponentType<T>) {\n\n    return (props: any) => {\n        debugger\n        return <Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </Suspense>\n    }\n}","import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./Components/Navbar/Navbar\";\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport {News} from \"./Components/News/News\";\nimport {Music} from \"./Components/Music/Music\";\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport HeaderContainer from './Components/Header/HeaderContainer';\nimport Login from \"./Components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {InitializedSuccessTC} from \"./redux/app-reducer\";\nimport {Preloader} from \"./Components/common/Preloader/Preloader\";\nimport store, {AllAppStateType} from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/WithSuspense\";\n\n\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./Components/Profile/ProfileContainer'));\n\ntype AppType = {\n    InitializedSuccessTC: () => void\n    initialized: boolean\n}\n\nclass App extends React.Component<AppType> {\n\n    componentDidMount() {\n        this.props.InitializedSuccessTC(); // thunkCreator\n    }\n\n    render() {\n\n        if (this.props.initialized) {\n            return (\n                <div className={\"app-wrapper\"}>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className={\"app-wrapper-content\"}>\n                        <Route path={\"/login\"} render={() => <Login/>}/>\n                        <Route path={\"/profile/:userId?\"} render={withSuspense(ProfileContainer)}/>\n                        <Route path={\"/dialogs\"} render={withSuspense(DialogsContainer)}/>\n                        <Route path={\"/users\"} render={() => <UsersContainer/>}/>\n                        <Route path={\"/news\"} component={() => <News/>}/>\n                        <Route path={\"/music\"} component={() => <Music/>}/>\n                    </div>\n                </div>\n            );\n        } else {\n            return <Preloader/>\n        }\n    }\n}\n\ntype mapStateToPropsType = {\n    initialized: boolean\n}\n\nconst mapStateToProps = (state: AllAppStateType): mapStateToPropsType => ({\n    initialized: state.app.initialized\n})\n\nconst AppContainer =  compose<React.ComponentType> (\n    connect(mapStateToProps, {InitializedSuccessTC}),\n    withRouter\n)(App);\n\nconst SocialNetworkApp = () => {\n    return <HashRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>\n}\n\nexport default SocialNetworkApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport SocialNetworkApp from \"./App\";\n\n    ReactDOM.render(\n        <React.StrictMode>\n            <SocialNetworkApp/>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, {ComponentType} from \"react\";\nimport style from \"./FormsControls.module.css\"\nimport {Field, WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\nimport {FieldValidatorType} from \"../../../utils/validators/validators\";\n\ntype FormsControlPropsType = {\n    meta: WrappedFieldMetaProps\n}\n\n\nexport const FormsControl: React.FC<FormsControlPropsType> = ({meta: {touched, error}, children}) => {\n\n    let hasError = touched && error;\n\n    return (\n        <div className={style.formsControl + \" \" + (hasError ? style.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props\n    return (\n        <FormsControl {...props} ><textarea {...input} {...restProps}/></FormsControl>\n    )\n}\n\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\n    const {input, meta, ...restProps} = props\n    return (\n        <FormsControl {...props} ><input {...input} {...restProps}/></FormsControl>\n    )\n}\n\nexport const createField = (name: string, placeholder: string | null, component: ComponentType<WrappedFieldProps>, validate?: Array<FieldValidatorType>, type?: string, text?: string) => {\n    return (\n        <div>\n            <Field name={name} placeholder={placeholder} component={component} validate={validate} type={type}/> {text}\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/preloader.7e0cb4cd.svg\";","import style from \"../../Users/Users.module.css\";\nimport React from \"react\";\nimport preloader from \"./../../../assets/images/preloader.svg\"\n\n\nexport const Preloader = () => {\n    return (\n        <img src={preloader} className={style.preloader}/>\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formsControl\":\"FormsControls_formsControl__3jLxZ\",\"error\":\"FormsControls_error__1ZLMY\",\"commonError\":\"FormsControls_commonError__20ouq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Users_avatar__1xz_T\",\"selectedPage\":\"Users_selectedPage__21xQ4\",\"preloader\":\"Users_preloader__197xo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1dlDZ\",\"page\":\"Paginator_page__r0w9s\"};","\nexport type FieldValidatorType = (value: string) => string | undefined\n\nexport const required:FieldValidatorType = (value) => {\n    if (value) return undefined;\n    return \"Field should be required\"\n}\n\nexport const maxLengthCreator = (maxValue: number):FieldValidatorType => (value) => {\n    if (value && value.length < maxValue) return undefined\n    return `Max length ${maxValue} symbols`\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1CGKd\",\"login\":\"Header_login__3Lpvl\"};","import React, {ComponentType} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport { AllAppStateType } from \"../redux/redux-store\";\n\n\ntype MapStateToPropsType = {\n    isAuth: boolean\n}\n\nconst mapStateToProps = (state: AllAppStateType): MapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\n\nexport function withAuthRedirect <T>(Component: ComponentType<T>) {\n\n    function RedirectComponent(props: MapStateToPropsType) {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={\"/login\"}/>\n        return <Component {...restProps as T}/>\n    }\n\n\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n    return ConnectedRedirectComponent\n\n}","import {ProfileType} from \"../Components/Profile/ProfileContainer\";\nimport {Dispatch} from \"redux\";\nimport {profileAPI} from \"../api/api\";\n\nconst ADD_POST = \"PROFILE/ADD-POST\";\nconst SET_USER_PROFILE = \"PROFILE/SET_USER_PROFILE\";\nconst GET_STATUS = \"PROFILE/GET_STATUS\";\nconst DELETE_POST = \"PROFILE/DELETE_POST\";\n\nlet initialState = {\n    posts: [\n        {id: 1, message: \"Hello, how are you?\", likesCount: 23},\n        {id: 2, message: \"Its my first post\", likesCount: 5}\n    ] as PostsType[],\n    profile: {\n        aboutMe: \"\",\n        contacts: {\n            facebook: \"\",\n            website: \"\",\n            vk: \"\",\n            twitter: \"\",\n            instagram: \"\",\n            youtube: \"\",\n            github: \"\",\n            mainLink: \"\"\n        },\n        lookingForAJob: false,\n        lookingForAJobDescription: \"\",\n        fullName: \"\",\n        userId: 0,\n        photos: {\n            small: \"\",\n            large: \"\"\n        }\n    },\n    status: \"\"\n}\n\nexport const profileReducer = (state: InitialStateType = initialState, action: ProfileActionsTypes): InitialStateType => {\n    switch (action.type) {\n        case DELETE_POST:\n            return {...state, posts: state.posts.filter((p) => p.id !== action.postId)}\n        case ADD_POST:\n            const newPost: PostsType = {\n                id: new Date().getTime(),\n                message: action.newPostBody,\n                likesCount: 0\n            }\n            return {\n                ...state,\n                posts: [...state.posts, newPost],\n            }\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            }\n        case GET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            }\n        default:\n            return state\n    }\n}\n\n\n// ACTIONS\nexport const AddPostActionCreator = (newPostBody: string) => ({type: ADD_POST, newPostBody: newPostBody} as const)\nexport const setUserProfile = (profile: ProfileType) => ({type: SET_USER_PROFILE, profile} as const)\nexport const getStatusAC = (status: string) => ({type: GET_STATUS, status} as const)\nexport const deletePost = (postId: number) => ({type: DELETE_POST, postId} as const)\n\n// TYPES\nexport type InitialStateType = typeof initialState\nexport type ProfileActionsTypes = ReturnType<typeof AddPostActionCreator>\n    | ReturnType<typeof setUserProfile>\n    | ReturnType<typeof getStatusAC>\n    | ReturnType<typeof deletePost>\nexport type PostsType = {\n    id: number\n    message: string\n    likesCount: number\n}\n\n// THUNKS\nexport const getProfileTC = (userId: string) => async (dispatch: Dispatch<ProfileActionsTypes>) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getStatusTC = (userId: string) => async (dispatch: Dispatch<ProfileActionsTypes>) => {\n    const response = await profileAPI.getStatus(userId)\n    dispatch(getStatusAC(response.data))\n}\n\nexport const updateStatusTC = (status: string) => async (dispatch: Dispatch<ProfileActionsTypes>) => {\n    const response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(getStatusAC(status))\n    }\n}"],"sourceRoot":""}